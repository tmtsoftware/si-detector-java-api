/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.tmt.aps.ics.sidetector.api;

public class sdk_cpp_con {
  public static int loadDll() {
    return sdk_cpp_conJNI.loadDll();
  }

  public static String[] scanInterfaces(boolean forceRescan) {
    return sdk_cpp_conJNI.scanInterfaces(forceRescan);
  }

  public static String[] getSoftwareSummary(int camHandle) {
    return sdk_cpp_conJNI.getSoftwareSummary(camHandle);
  }

  public static int openCamera(String[] info) {
    return sdk_cpp_conJNI.openCamera(info);
  }

  public static int closeCamera(int camHandle) {
    return sdk_cpp_conJNI.closeCamera(camHandle);
  }

  public static String[] getErrorString(int retcode) {
    return sdk_cpp_conJNI.getErrorString(retcode);
  }

  public static int getStatus(int camHandle) {
    return sdk_cpp_conJNI.getStatus(camHandle);
  }

  public static int getParameters(int camHandle) {
    return sdk_cpp_conJNI.getParameters(camHandle);
  }

  public static String[] getXmlFiles(int camHandle) {
    return sdk_cpp_conJNI.getXmlFiles(camHandle);
  }

  public static String[] getXmlFile(int camHandle, String fileName) {
    return sdk_cpp_conJNI.getXmlFile(camHandle, fileName);
  }

  public static String[] getStatusNames(int camHandle) {
    return sdk_cpp_conJNI.getStatusNames(camHandle);
  }

  public static String[] getStatusItem(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getStatusItem(camHandle, displayName);
  }

  public static String[] getStatusValue(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getStatusValue(camHandle, displayName);
  }

  public static String[] getStatusPulldownItem(int camHandle, String displayName, int pulldownIndex) {
    return sdk_cpp_conJNI.getStatusPulldownItem(camHandle, displayName, pulldownIndex);
  }

  public static String[] getStatusBitField(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getStatusBitField(camHandle, displayName);
  }

  public static String[] getParameterNames(int camHandle) {
    return sdk_cpp_conJNI.getParameterNames(camHandle);
  }

  public static String[] getParameterItem(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getParameterItem(camHandle, displayName);
  }

  public static String[] getParameterValue(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getParameterValue(camHandle, displayName);
  }

  public static String[] getParameterPulldownItem(int camHandle, String displayName, int pulldownIndex) {
    return sdk_cpp_conJNI.getParameterPulldownItem(camHandle, displayName, pulldownIndex);
  }

  public static String[] getParameterBitField(int camHandle, String displayName) {
    return sdk_cpp_conJNI.getParameterBitField(camHandle, displayName);
  }

  public static int setParameterValue(int cameraHandle, String displayName, String valStr) {
    return sdk_cpp_conJNI.setParameterValue(cameraHandle, displayName, valStr);
  }

  public static int sendParameters(int cameraHandle) {
    return sdk_cpp_conJNI.sendParameters(cameraHandle);
  }

  public static int updateParameters(int cameraHandle) {
    return sdk_cpp_conJNI.updateParameters(cameraHandle);
  }

  public static int get_cam_info(int[] result) {
    return sdk_cpp_conJNI.get_cam_info(result);
  }

  public static int cam_read(int serLen, int parLen, int is16, int[] outArray) {
    return sdk_cpp_conJNI.cam_read(serLen, parLen, is16, outArray);
  }

  public static int getImageSize(int camHandle, int[] result) {
    return sdk_cpp_conJNI.getImageSize(camHandle, result);
  }

  public static int prepareAcquisition(int camHandle, int serLen, int parLen, int is16) {
    return sdk_cpp_conJNI.prepareAcquisition(camHandle, serLen, parLen, is16);
  }

  public static String[] issueCommand(int camHandle, String postName, String argStr) {
    return sdk_cpp_conJNI.issueCommand(camHandle, postName, argStr);
  }

  public static int acqStatus(int camHandle, int[] result) {
    return sdk_cpp_conJNI.acqStatus(camHandle, result);
  }

  public static int endAcq(int camHandle, boolean forceAbort, int[] outArray, int arraySize) {
    return sdk_cpp_conJNI.endAcq(camHandle, forceAbort, outArray, arraySize);
  }

}
